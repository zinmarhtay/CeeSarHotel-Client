import { OnDestroy, OnInit, ElementRef, Renderer2 } from '@angular/core';
import { ProgressbarComponent } from './progressbar.component';
import * as ɵngcc0 from '@angular/core';
export declare class BarComponent implements OnInit, OnDestroy {
    private el;
    private renderer;
    max: number;
    /** provide one of the four supported contextual classes: `success`, `info`, `warning`, `danger` */
    get type(): string;
    set type(v: string);
    /** current value of progress bar */
    get value(): number;
    set value(v: number);
    get setBarWidth(): number;
    addClass: boolean;
    get isBs3(): boolean;
    striped: boolean;
    animate: boolean;
    percent: number;
    progress: ProgressbarComponent;
    protected _value: number;
    protected _type: string;
    private _prevType;
    constructor(el: ElementRef, progress: ProgressbarComponent, renderer: Renderer2);
    ngOnInit(): void;
    ngOnDestroy(): void;
    recalculatePercentage(): void;
    private applyTypeClasses;
    static ɵfac: ɵngcc0.ɵɵFactoryDef<BarComponent, [null, { host: true; }, null]>;
    static ɵcmp: ɵngcc0.ɵɵComponentDefWithMeta<BarComponent, "bar", never, { "type": "type"; "value": "value"; }, {}, never, ["*"]>;
}

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYmFyLmNvbXBvbmVudC5kLnRzIiwic291cmNlcyI6WyJiYXIuY29tcG9uZW50LmQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7QUFDQTs7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7O0FBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBPbkRlc3Ryb3ksIE9uSW5pdCwgRWxlbWVudFJlZiwgUmVuZGVyZXIyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBQcm9ncmVzc2JhckNvbXBvbmVudCB9IGZyb20gJy4vcHJvZ3Jlc3NiYXIuY29tcG9uZW50JztcbmV4cG9ydCBkZWNsYXJlIGNsYXNzIEJhckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25EZXN0cm95IHtcbiAgICBwcml2YXRlIGVsO1xuICAgIHByaXZhdGUgcmVuZGVyZXI7XG4gICAgbWF4OiBudW1iZXI7XG4gICAgLyoqIHByb3ZpZGUgb25lIG9mIHRoZSBmb3VyIHN1cHBvcnRlZCBjb250ZXh0dWFsIGNsYXNzZXM6IGBzdWNjZXNzYCwgYGluZm9gLCBgd2FybmluZ2AsIGBkYW5nZXJgICovXG4gICAgZ2V0IHR5cGUoKTogc3RyaW5nO1xuICAgIHNldCB0eXBlKHY6IHN0cmluZyk7XG4gICAgLyoqIGN1cnJlbnQgdmFsdWUgb2YgcHJvZ3Jlc3MgYmFyICovXG4gICAgZ2V0IHZhbHVlKCk6IG51bWJlcjtcbiAgICBzZXQgdmFsdWUodjogbnVtYmVyKTtcbiAgICBnZXQgc2V0QmFyV2lkdGgoKTogbnVtYmVyO1xuICAgIGFkZENsYXNzOiBib29sZWFuO1xuICAgIGdldCBpc0JzMygpOiBib29sZWFuO1xuICAgIHN0cmlwZWQ6IGJvb2xlYW47XG4gICAgYW5pbWF0ZTogYm9vbGVhbjtcbiAgICBwZXJjZW50OiBudW1iZXI7XG4gICAgcHJvZ3Jlc3M6IFByb2dyZXNzYmFyQ29tcG9uZW50O1xuICAgIHByb3RlY3RlZCBfdmFsdWU6IG51bWJlcjtcbiAgICBwcm90ZWN0ZWQgX3R5cGU6IHN0cmluZztcbiAgICBwcml2YXRlIF9wcmV2VHlwZTtcbiAgICBjb25zdHJ1Y3RvcihlbDogRWxlbWVudFJlZiwgcHJvZ3Jlc3M6IFByb2dyZXNzYmFyQ29tcG9uZW50LCByZW5kZXJlcjogUmVuZGVyZXIyKTtcbiAgICBuZ09uSW5pdCgpOiB2b2lkO1xuICAgIG5nT25EZXN0cm95KCk6IHZvaWQ7XG4gICAgcmVjYWxjdWxhdGVQZXJjZW50YWdlKCk6IHZvaWQ7XG4gICAgcHJpdmF0ZSBhcHBseVR5cGVDbGFzc2VzO1xufVxuIl19